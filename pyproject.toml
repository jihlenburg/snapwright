[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "snapwright"
version = "0.1.0"
description = "Simple yet powerful web browsing and screenshot library using Playwright"
readme = "README.md"
authors = [
    {name = "Joern Ihlenburg", email = "joern@ihlenburg.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
]
keywords = ["playwright", "screenshot", "web-scraping", "browser-automation", "web-browser", "snapwright"]
requires-python = ">=3.8"
dependencies = [
    "playwright>=1.40.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]

[project.urls]
Homepage = "https://github.com/jihlenburg/snapwright"
Documentation = "https://github.com/jihlenburg/snapwright#readme"
Repository = "https://github.com/jihlenburg/snapwright"
Issues = "https://github.com/jihlenburg/snapwright/issues"

[project.scripts]
snapwright = "snapwright.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=snapwright"

[tool.coverage.run]
source = ["src/snapwright"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]